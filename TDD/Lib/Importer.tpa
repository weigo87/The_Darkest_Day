OUTER_TEXT_SPRINT COMP_FOLDER ~~

//=============================================================================
DEFINE_ACTION_MACRO FetchTranslationsBeforeAnySAYandCOMPILE
BEGIN
	ACTION_IF DIRECTORY_EXISTS "%MOD_FOLDER%/Language/%LANGUAGE%/%COMP_FOLDER%" BEGIN
		ACTION_IF NOT (GAME_IS "bgee bg2ee eet iwdee pstee") THEN BEGIN
			COPY ~weidu_external/Language/%MOD_FOLDER%/%LANGUAGE%/%COMP_FOLDER%~ ~%TRA_LOCATION%/%LANGUAGE%~
		END
		ACTION_IF (GAME_IS "bgee bg2ee eet iwdee pstee") THEN BEGIN
			COPY ~%MOD_FOLDER%/Language/%LANGUAGE%/%COMP_FOLDER%~ ~%TRA_LOCATION%/%LANGUAGE%~
		END

	END
END


//=============================================================================
DEFINE_ACTION_FUNCTION ImportComponent STR_VAR aComp = ~~
BEGIN
	OUTER_TEXT_SPRINT COMP_FOLDER ~_%aComp%~
	OUTER_TEXT_SPRINT RES_FOLDER ~%MOD_FOLDER%/%COMP_FOLDER%~

//	MKDIR ~%MOD_FOLDER%/Audio~
//	MKDIR ~%MOD_FOLDER%/tiz~
//	MKDIR ~%workspace%~
//	MKDIR ~%workspace%/Translations~
	MKDIR ~%workspace%/%COMP_FOLDER%~
	MKDIR ~%workspace%/%COMP_FOLDER%/Snip~

	LAM FetchTranslationsBeforeAnySAYandCOMPILE
	
	ACTION_DEFINE_ASSOCIATIVE_ARRAY turn_off_at_night BEGIN // turn off sleeping animals at night
		bird => 1
		eagle => 1
		vultur => 1
		seagul => 1
		butrfly => 1
	END

	//LAM ImportSPL_FromTDD
	LAM ImportCRE_FromTDD
	LAM ImportITM_FromTDD
	LAM ImportSTO_FromTDD
	LAM ImportARE_FromTDD

	ACTION_DEFINE_ASSOCIATIVE_ARRAY dispatch BEGIN
		BAM => override
		BMP => override
//		ITM => override
//		STO => override
		MOS => override
		BAF => ~%workspace%/%COMP_FOLDER%~
		D   => ~%workspace%/%COMP_FOLDER%~
		SNIP => ~%workspace%/%COMP_FOLDER%/Snip~
		graphics => override
	END
	ACTION_PHP_EACH dispatch AS restype => to BEGIN
		ACTION_IF ~%restype%~ STR_EQ ~MOS~ BEGIN
			ACTION_IF DIRECTORY_EXISTS "%RES_FOLDER%/%restype%/%engine%"
				BEGIN COPY ~%RES_FOLDER%/%restype%/%engine%~ ~%to%~ END // ee or non-ee
			END ELSE BEGIN
			ACTION_IF DIRECTORY_EXISTS "%RES_FOLDER%/%restype%"
				BEGIN COPY ~%RES_FOLDER%/%restype%~ ~%to%~ END
			END 
		END

	LAM ApplyScriptedXpCustomization
	LAF InstallComponentSpecificContents STR_VAR comp = EVAL ~%aComp%~ END
	LAM CompileBAFandDAfterCustomizationsApplied
	
	ACTION_IF FILE_EXISTS ~%MOD_FOLDER%/DebugOn.txt~ BEGIN 
		PRINT ~!!!!!!!! DEBUG ON: HandleAudio and HandleTileset skipped !!!!!!!!~ 
	END ELSE BEGIN 
		LAM HandleAudio 
		LAM HandleTileset	
	END
END


//=============================================================================
DEFINE_ACTION_FUNCTION InstallComponentSpecificContents STR_VAR comp = ~~
BEGIN	
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/%comp%.tpa~
		BEGIN INCLUDE ~%RES_FOLDER%/%comp%.tpa~ LAM InstallSpecificContents END
END


//=============================================================================
DEFINE_ACTION_MACRO CompileBAFandDAfterCustomizationsApplied
BEGIN
	COMPILE ~%workspace%/%COMP_FOLDER%~ EVAL
END

//=============================================================================
DEFINE_ACTION_MACRO ImportARE_FromTDD
BEGIN
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/AreasContract.2da~ BEGIN
		COPY ~%RES_FOLDER%/AreasContract.2da~ ~%workspace%/%COMP_FOLDER%/AreasContract.2da~
			COUNT_2DA_ROWS 1 count
			WHILE (count > 1) BEGIN
				READ_2DA_ENTRY (count -1) 0 8 resname
				READ_2DA_ENTRY (count -1) 1 8 mos
				READ_2DA_ENTRY (count -1) 2 8 wed
				READ_2DA_ENTRY (count -1) 3 8 tiz
				READ_2DA_ENTRY (count -1) 4 8 htmap
				READ_2DA_ENTRY (count -1) 5 8 lmmap
				READ_2DA_ENTRY (count -1) 6 8 srmap
				READ_2DA_ENTRY (count -1) 7 8 lnmap
				INNER_ACTION BEGIN
					OUTER_SPRINT path ~%RES_FOLDER%/ARE/%resname%.are~
					ACTION_IF FILE_EXISTS ~%RES_FOLDER%/ARE/%resname%.are~ // we start to use TDDs .AREs
						BEGIN OUTER_SPRINT path ~%RES_FOLDER%/ARE/%resname%.are~ END
								
					COPY ~%path%~ ~override~
						LPM SetAnimationsInCombatFlag
						PATCH_INCLUDE ~%MOD_FOLDER%/Lib/install-nightmaps.tpa~
						
					ACTION_IF NOT ~%mos%~ STRING_EQUAL ~+~ BEGIN ACTION_IF IS_AN_INT mos BEGIN LAF InstallMosFiles STR_VAR filename = EVAL ~%resname%~ END END ELSE BEGIN LAF InstallMosFiles STR_VAR filename = EVAL ~%mos%~ END END END
					ACTION_IF NOT ~%wed%~ STRING_EQUAL ~+~ BEGIN ACTION_IF IS_AN_INT wed BEGIN LAF InstallWedFiles STR_VAR filename = EVAL ~%resname%~ END END ELSE BEGIN LAF InstallWedFiles STR_VAR filename = EVAL ~%wed%~ END END END
					ACTION_IF NOT ~%tiz%~ STRING_EQUAL ~+~ BEGIN ACTION_IF IS_AN_INT tiz BEGIN LAF InstallTisFiles STR_VAR filename = EVAL ~%resname%~ END END ELSE BEGIN LAF InstallTisFiles STR_VAR filename = EVAL ~%tiz%~ END END END
					ACTION_IF NOT ~%htmap%~ STRING_EQUAL ~+~ BEGIN ACTION_IF IS_AN_INT htmap BEGIN COPY ~%RES_FOLDER%/BMP/%resname%HT.BMP~ ~override~ END ELSE BEGIN COPY ~%RES_FOLDER%/BMP/%htmap%.BMP~ ~override~ END END
					ACTION_IF NOT ~%lmmap%~ STRING_EQUAL ~+~ BEGIN ACTION_IF IS_AN_INT lmmap BEGIN COPY ~%RES_FOLDER%/BMP/%resname%LM.BMP~ ~override~ END ELSE BEGIN COPY ~%RES_FOLDER%/BMP/%lmmap%.BMP~ ~override~ END END
					ACTION_IF NOT ~%srmap%~ STRING_EQUAL ~+~ BEGIN ACTION_IF IS_AN_INT srmap BEGIN COPY ~%RES_FOLDER%/BMP/%resname%SR.BMP~ ~override~ END ELSE BEGIN COPY ~%RES_FOLDER%/BMP/%srmap%.BMP~ ~override~ END END
					ACTION_IF NOT ~%lnmap%~ STRING_EQUAL ~+~ BEGIN ACTION_IF IS_AN_INT srmap BEGIN COPY ~%RES_FOLDER%/BMP/%resname%LN.BMP~ ~override~ END ELSE BEGIN COPY ~%RES_FOLDER%/BMP/%lnmap%.BMP~ ~override~ END END
				END
				SET count = count -1
			END		
		BUT_ONLY
	END
	//EET Worldmap
	ACTION_IF GAME_IS ~eet~ BEGIN
		INCLUDE ~%MOD_FOLDER%/Lib/add_worldmap_tbl.tpa~
		LAF ADD_WORLDMAP_TBL
			INT_VAR
			verbose = 0
			inclSv = 0
			STR_VAR
			path_to_areas = EVAL ~%MOD_FOLDER%/Worldmap/eet_areas.tbl~
			path_to_areas_bp = EVAL ~%MOD_FOLDER%/Worldmap/areas.tbl~
			path_to_links = EVAL ~%MOD_FOLDER%/Worldmap/links.tbl~
			path_to_trans = EVAL ~%MOD_FOLDER%/Language/%LANGUAGE%/worldmap.tra~
		END
	END
END


//=============================================================================
DEFINE_ACTION_MACRO ApplyScriptedXpCustomization
BEGIN
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/XpContract.2da~ BEGIN
		COPY ~%RES_FOLDER%/XpContract.2da~ ~%workspace%/%COMP_FOLDER%/XpContract.2da~
			COUNT_2DA_ROWS 4 count
			WHILE (count > 1) BEGIN
				READ_2DA_ENTRY (count -1) 0 4 resref
				READ_2DA_ENTRY (count -1) 1 4 signature
				READ_2DA_ENTRY (count -1) 2 4 tddValue
				READ_2DA_ENTRY (count -1) 3 4 xpValue
				SET count = count -1				
						
				INNER_ACTION BEGIN
					COPY ~%workspace%/%COMP_FOLDER%/%resref%~ ~%workspace%/%COMP_FOLDER%/%resref%~
						SET xp = %tddValue%
						PATCH_IF IS_AN_INT xpValue BEGIN
							SET xp = %xpValue%
							PATCH_IF %xpValue% < 1000 
								BEGIN SET xp = %tddValue% * %xpValue% / 100 END
						END
						REPLACE_TEXTUALLY ~%signature%~ ~%xp%~						
				END
			END		
		BUT_ONLY
	END
END


//=============================================================================
DEFINE_ACTION_MACRO ImportITM_FromTDD
BEGIN	
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/ItemsContract.2da~ BEGIN
		COPY ~%RES_FOLDER%/ItemsContract.2da~ ~%workspace%/%COMP_FOLDER%/ItemsContract.2da~
			COUNT_2DA_ROWS 7 count
			WHILE (count > 1) BEGIN
				READ_2DA_ENTRY (count -1) 0 7 resname
				READ_2DA_ENTRY (count -1) 1 7 name1
				READ_2DA_ENTRY (count -1) 2 7 name2
				READ_2DA_ENTRY (count -1) 3 7 unidentifiedDesc
				READ_2DA_ENTRY (count -1) 4 7 desc
				READ_2DA_ENTRY (count -1) 5 7 iconS
				READ_2DA_ENTRY (count -1) 6 7 policy
				SET count = count -1
					
				TO_UPPER resname
				SET customize = NOT (~%policy%~ STRING_EQUAL ~+~ || ~%policy%~ STRING_EQUAL ~++++++++~)
				SET undroppable = (~%policy%~ STRING_EQUAL ~.~)
				SET replace = (~%customize%~ && NOT ~%undroppable%~)
				
				INNER_ACTION BEGIN
					ACTION_IF NOT ~%replace%~ BEGIN
						OUTER_SPRINT path ~%RES_FOLDER%/ITM/%resname%.ITM~
						ACTION_IF FILE_EXISTS ~%RES_FOLDER%/ITM/%resname%.itm~ // we start to use TDDs .ITMs
							BEGIN OUTER_SPRINT path ~%RES_FOLDER%/ITM/%resname%.itm~ END															
							
						COPY ~%path%~ ~override~
							PATCH_IF IS_AN_INT name1 BEGIN SET strref = RESOLVE_STR_REF ((AT name1)) WRITE_LONG NAME1 %strref% END
							PATCH_IF IS_AN_INT name2 BEGIN SET strref = RESOLVE_STR_REF ((AT name2)) WRITE_LONG NAME2 %strref% END
							PATCH_IF IS_AN_INT unidentifiedDesc BEGIN SET strref = RESOLVE_STR_REF ((AT unidentifiedDesc)) WRITE_LONG UNIDENTIFIED_DESC %strref% END
							PATCH_IF IS_AN_INT desc BEGIN SET strref = RESOLVE_STR_REF ((AT desc)) WRITE_LONG DESC %strref% END
							PATCH_IF NOT ~%iconS%~ STRING_EQUAL ~+~ BEGIN 
								PATCH_IF IS_AN_INT iconS 
									BEGIN SPRINT iconS ~%resname%~ END
								WRITE_ASCIIE 0x3A ~%iconS%~ #8
								INNER_ACTION BEGIN
									ACTION_IF NOT FILE_EXISTS_IN_GAME ~%iconS%.bam~ 
										BEGIN COPY ~%RES_FOLDER%/BAM/%iconS%.bam~ ~override~ END 
								END									
							END
							PATCH_IF ~%policy%~ STRING_EQUAL ~.~ BEGIN WRITE_BYTE 0x18 (THIS BAND 0b11111011) END // set undroppable flag
					END
				END
			END		
		BUT_ONLY
	END
END


//=============================================================================
//DEFINE_ACTION_MACRO ImportSPL_FromTDD
//BEGIN		
//	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/SpellsContract.2da~ BEGIN
//		COPY ~%RES_FOLDER%/SpellsContract.2da~ ~%workspace%/%COMP_FOLDER%/SpellsContract.2da~
//			COUNT_2DA_ROWS 5 count
//			WHILE (count > 1) BEGIN
//				READ_2DA_ENTRY (count -1) 0 5 resname
//				READ_2DA_ENTRY (count -1) 1 5 name1
//				READ_2DA_ENTRY (count -1) 2 5 name2
//				READ_2DA_ENTRY (count -1) 3 5 unidentifiedDesc
//				READ_2DA_ENTRY (count -1) 4 5 desc
//				SET count = count -1
//					
//				INNER_ACTION BEGIN
//					COPY ~TDD/SPL/%resname%.SPL~ ~override~
//						PATCH_IF IS_AN_INT name1 BEGIN SET strref = RESOLVE_STR_REF ((AT name1)) WRITE_LONG NAME1 %strref% END
//						PATCH_IF IS_AN_INT name2 BEGIN SET strref = RESOLVE_STR_REF ((AT name2)) WRITE_LONG NAME2 %strref% END
//						PATCH_IF IS_AN_INT unidentifiedDesc BEGIN SET strref = RESOLVE_STR_REF ((AT unidentifiedDesc)) WRITE_LONG UNIDENTIFIED_DESC %strref% END
//						PATCH_IF IS_AN_INT desc BEGIN SET strref = RESOLVE_STR_REF ((AT desc)) WRITE_LONG DESC %strref% END
//				END
//			END
//		BUT_ONLY
//	END	
//END


//=============================================================================
DEFINE_ACTION_MACRO ImportSTO_FromTDD
BEGIN		
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/StoresContract.2da~ BEGIN
		COPY ~%RES_FOLDER%/StoresContract.2da~ ~%workspace%/%COMP_FOLDER%/StoresContract.2da~
			COUNT_2DA_ROWS 3 count
			WHILE (count > 1) BEGIN
				READ_2DA_ENTRY (count -1) 0 3 resname
				READ_2DA_ENTRY (count -1) 1 3 name1
				READ_2DA_ENTRY (count -1) 2 3 name2
				SET count = count -1
					
				INNER_ACTION BEGIN
					COPY ~%RES_FOLDER%/STO/%resname%.STO~ ~override~
						PATCH_IF IS_AN_INT name1 BEGIN SET strref = RESOLVE_STR_REF ((AT name1)) WRITE_LONG NAME1 %strref% END
						PATCH_IF IS_AN_INT name2 BEGIN SET strref = RESOLVE_STR_REF ((AT name2)) WRITE_LONG NAME2 %strref% END
				END
			END		
		BUT_ONLY
	END	
END

//=============================================================================
DEFINE_ACTION_MACRO ImportCRE_FromTDD
BEGIN			
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/CreaturesContract.2da~ BEGIN
		COPY ~%RES_FOLDER%/CreaturesContract.2da~ ~%workspace%/%COMP_FOLDER%/CreaturesContract.2da~
			COUNT_2DA_ROWS 12 count
			WHILE (count > 1) BEGIN
				READ_2DA_ENTRY (count -1) 0 12 resname
				READ_2DA_ENTRY (count -1) 1 12 name1
				READ_2DA_ENTRY (count -1) 2 12 name2
				READ_2DA_ENTRY (count -1) 3 12 deathvar
				READ_2DA_ENTRY (count -1) 4 12 sO
				READ_2DA_ENTRY (count -1) 5 12 sC
				READ_2DA_ENTRY (count -1) 6 12 sR
				READ_2DA_ENTRY (count -1) 7 12 sG
				READ_2DA_ENTRY (count -1) 8 12 sD
				READ_2DA_ENTRY (count -1) 9 12 dg
				READ_2DA_ENTRY (count -1) 10 12 portraitS
				READ_2DA_ENTRY (count -1) 11 12 xpValue
				SET count = count -1
					
				INNER_ACTION BEGIN
					COPY ~%RES_FOLDER%/CRE/%resname%.CRE~ ~override~
						LAUNCH_PATCH_FUNCTION ~FJ_CRE_VALIDITY~ RET valid = valid END
						PATCH_IF (valid) BEGIN
							PATCH_IF IS_AN_INT name1 BEGIN SET strref = RESOLVE_STR_REF ((AT name1)) WRITE_LONG NAME1 %strref% END
							PATCH_IF IS_AN_INT name2 BEGIN SET strref = RESOLVE_STR_REF ((AT name2)) WRITE_LONG NAME2 %strref% END
							PATCH_IF ~%deathvar%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCII DEATHVAR ~~ #32 END ELSE BEGIN PATCH_IF IS_AN_INT deathvar BEGIN WRITE_ASCIIE DEATHVAR ~%resname%~ #32 END ELSE BEGIN WRITE_ASCIIE DEATHVAR ~%deathvar%~ #32 END END
							PATCH_IF ~%sO%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCII SCRIPT_OVERRIDE ~~ #8 END ELSE BEGIN PATCH_IF IS_AN_INT sO BEGIN WRITE_ASCIIE SCRIPT_OVERRIDE ~%resname%~ #8 END ELSE BEGIN WRITE_ASCIIE SCRIPT_OVERRIDE ~%sO%~ #8 END END
							PATCH_IF ~%sC%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCII SCRIPT_CLASS ~~ #8 END ELSE BEGIN PATCH_IF IS_AN_INT sC BEGIN WRITE_ASCIIE SCRIPT_CLASS ~%resname%~ #8 END ELSE BEGIN WRITE_ASCIIE SCRIPT_CLASS ~%sC%~ #8 END END
							PATCH_IF ~%sR%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCII SCRIPT_RACE ~~ #8 END ELSE BEGIN PATCH_IF IS_AN_INT sR BEGIN WRITE_ASCIIE SCRIPT_RACE ~%resname%~ #8 END ELSE BEGIN WRITE_ASCIIE SCRIPT_RACE ~%sR%~ #8 END END
							PATCH_IF ~%sG%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCII SCRIPT_GENERAL ~~ #8 END ELSE BEGIN PATCH_IF IS_AN_INT sG BEGIN WRITE_ASCIIE SCRIPT_GENERAL ~%resname%~ #8 END ELSE BEGIN WRITE_ASCIIE SCRIPT_GENERAL ~%sG%~ #8 END END
							PATCH_IF ~%sD%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCII SCRIPT_DEFAULT ~~ #8 END ELSE BEGIN PATCH_IF IS_AN_INT sD BEGIN WRITE_ASCIIE SCRIPT_DEFAULT ~%resname%~ #8 END ELSE BEGIN WRITE_ASCIIE SCRIPT_DEFAULT ~%sD%~ #8 END END
							PATCH_IF ~%dg%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCII DIALOG ~~ #8 END ELSE BEGIN PATCH_IF IS_AN_INT dg BEGIN WRITE_ASCIIE DIALOG ~%resname%~ #8 END ELSE BEGIN WRITE_ASCIIE DIALOG ~%dg%~ #8 END END
							PATCH_IF NOT ~%portraitS%~ STRING_EQUAL ~+~ BEGIN WRITE_ASCIIE 0x34 ~%portraitS%~ #8 END
							PATCH_IF IS_AN_INT xpValue BEGIN
								PATCH_IF %xpValue% < 1000 BEGIN
									WRITE_LONG 0x14 (THIS * %xpValue%/100)
								END
								ELSE BEGIN
									WRITE_LONG 0x14 %xpValue%
								END
							END
						END
				END
			END		
		BUT_ONLY
	END
	
END


//=============================================================================
DEFINE_ACTION_MACRO HandleAudio
BEGIN
	ACTION_IF ~%COMP_FOLDER%~ STR_EQ ~_CORE~ BEGIN
		MKDIR ~%TRA_LOCATION%/%LANGUAGE%/Ogg~
		ACTION_BASH_FOR ~%MOD_FOLDER%/Language/%LANGUAGE%/Ogg~ ~^.+\.ogg$~ BEGIN
			COPY ~%BASH_FOR_FILESPEC%~ ~%TRA_LOCATION%/%LANGUAGE%/Ogg~
		END
		ACTION_BASH_FOR ~%MOD_FOLDER%/language/english/ogg~ ~^.+\.ogg$~ BEGIN
			ACTION_IF NOT FILE_EXISTS ~%TRA_LOCATION%/%LANGUAGE%/Ogg/%BASH_FOR_FILE%~ BEGIN
				COPY ~%BASH_FOR_FILESPEC%~ ~%TRA_LOCATION%/%LANGUAGE%/Ogg~
			END
			ACTION_IF FILE_EXISTS_IN_GAME ~%BASH_FOR_RES%.wav~ BEGIN
				DELETE ~%TRA_LOCATION%/%LANGUAGE%/Ogg/%BASH_FOR_FILE%~
			END
		END
	END
	
	ACTION_BASH_FOR ~%RES_FOLDER%/sound~ ~^.+\.ogg$~ BEGIN
		ACTION_IF NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_RES%.wav~ BEGIN
			COPY ~%BASH_FOR_FILESPEC%~ ~%workspace%/%COMP_FOLDER%~
		END
	END
	
	LAF HANDLE_AUDIO  // With no configuration, HANDLE_AUDIO expects your audio, oggdec.exe and SoX to be located in mymod/audio
	STR_VAR
			audio_path = EVAL ~%TRA_LOCATION%/%LANGUAGE%/Ogg~
			oggdec_path = EVAL ~%MOD_FOLDER%/Tools/oggdec~
			sox_path = EVAL ~%MOD_FOLDER%/Tools/sox/~
			output_path = ~override~
	END
	LAF HANDLE_AUDIO  // With no configuration, HANDLE_AUDIO expects your audio, oggdec.exe and SoX to be located in mymod/audio
	STR_VAR
		audio_path = EVAL ~%workspace%/%COMP_FOLDER%~
		oggdec_path = EVAL ~%MOD_FOLDER%/Tools/oggdec~
		sox_path = EVAL ~%MOD_FOLDER%/Tools/sox/~
		output_path = ~override~
	END
END

//=============================================================================
DEFINE_ACTION_FUNCTION InstallTisFiles 
	STR_VAR filename = ""
BEGIN
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		LAF TIS_RES_TO_PVRZ STR_VAR tis_res = EVAL ~%filename%~ RET prefix END
		ACTION_IF FILE_EXISTS ~%RES_FOLDER%/Pvrz/%filename%.tis~ BEGIN
			COPY ~%RES_FOLDER%/Pvrz/%filename%.tis~ ~%workspace%/%COMP_FOLDER%~
			ACTION_BASH_FOR ~%RES_FOLDER%/Pvrz~ ~%prefix%.+?\.pvrz$~ BEGIN
				COPY ~%BASH_FOR_FILESPEC%~ ~%workspace%/%COMP_FOLDER%~
			END
		END
		ACTION_IF FILE_EXISTS ~%RES_FOLDER%/Pvrz/%filename%N.tis~ BEGIN
			COPY ~%RES_FOLDER%/Pvrz/%filename%N.tis~ ~%workspace%/%COMP_FOLDER%~
			ACTION_BASH_FOR ~%RES_FOLDER%/Pvrz~ ~%prefix%N.+?\.pvrz$~ BEGIN
				COPY ~%BASH_FOR_FILESPEC%~ ~%workspace%/%COMP_FOLDER%~
			END
		END
	END
	ACTION_IF GAME_IS ~bg2 tob bgt~ BEGIN
		COPY ~%RES_FOLDER%/tbc/%filename%.tbc~ ~%workspace%/%COMP_FOLDER%~
		ACTION_IF FILE_EXISTS ~%RES_FOLDER%/tbc/%filename%N.tbc~ BEGIN
			COPY ~%RES_FOLDER%/tbc/%filename%N.tbc~ ~%workspace%/%COMP_FOLDER%~
		END
	END
END

//=============================================================================
DEFINE_ACTION_MACRO HandleTileset
BEGIN
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		ACTION_BASH_FOR ~%workspace%/%COMP_FOLDER%~ ~.*\.tis$~ BEGIN
			ACTION_IF NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~ BEGIN
				COPY ~%BASH_FOR_FILESPEC%~ ~override~
					LPF UPDATE_PVRZ_INDICES RET original_base_index new_base_index END
				LAF TIS_RES_TO_PVRZ STR_VAR tis_res = EVAL ~%SOURCE_RES%~ RET prefix END
				ACTION_IF (new_base_index >= 0) BEGIN // It is strongly recommended to check the return values of "UPDATE_PVRZ_INDICES".
					ACTION_BASH_FOR ~%workspace%/%COMP_FOLDER%~ ~%prefix%[0-9][0-9]\.pvrz$~ BEGIN // Installing associated PVRZ resources
						LAF INSTALL_PVRZ INT_VAR original_base_index new_base_index STR_VAR source_file = EVAL ~%BASH_FOR_FILESPEC%~ END
					END
				END
			END
		END
	END
	ACTION_IF GAME_IS ~bg2 tob bgt~ BEGIN
		LAF HANDLE_TILECONV
			STR_VAR
				input_path    = EVAL "%workspace%/%COMP_FOLDER%"
				output_path	  = "override"
		END
	END
END

//=============================================================================
DEFINE_ACTION_FUNCTION InstallMosFiles 
	STR_VAR filename = ""
BEGIN
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/MOS/%engine%/%filename%.MOS~ BEGIN
		COPY ~%RES_FOLDER%/MOS/%engine%/%filename%.MOS~ ~override~
	END
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/MOS/%engine%/%filename%N.MOS~ BEGIN
		COPY ~%RES_FOLDER%/MOS/%engine%/%filename%N.MOS~ ~override~
	END
END

//=============================================================================
DEFINE_ACTION_FUNCTION InstallWedFiles 
	STR_VAR filename = ""
BEGIN
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/Wed/%filename%.wed~ BEGIN
		COPY ~%RES_FOLDER%/Wed/%filename%.wed~ ~override~
	END
	ACTION_IF FILE_EXISTS ~%RES_FOLDER%/Wed/%filename%N.wed~ BEGIN
		COPY ~%RES_FOLDER%/Wed/%filename%N.wed~ ~override~
	END
END
